name: CI - Tests and Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.17.1
        run_install: false

    - name: Fallback install pnpm (if missing)
      run: |
        if ! command -v pnpm >/dev/null 2>&1; then
          echo "pnpm not found from action-setup; installing globally via npm";
          npm i -g pnpm@10.17.1;
        else
          echo "pnpm already available";
        fi

    - name: Enable corepack
      run: corepack enable

    - name: Install dependencies (pnpm)
      run: pnpm install --frozen-lockfile

    - name: Run linter
      run: pnpm run lint

    - name: Run type check
      run: pnpm exec tsc --noEmit

    - name: Run tests
      run: pnpm run test:run

    - name: Run tests with coverage
      run: pnpm run test:coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        fail_ci_if_error: true

    - name: Check coverage thresholds
      run: |
        echo "Checking if coverage meets minimum thresholds..."
        pnpm run test:coverage -- --reporter=json | jq '.coverage.branches >= 90 and .coverage.functions >= 90 and .coverage.lines >= 90 and .coverage.statements >= 90'

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.17.1
        run_install: false

    - name: Fallback install pnpm (if missing)
      run: |
        if ! command -v pnpm >/dev/null 2>&1; then
          echo "pnpm not found from action-setup; installing globally via npm";
          npm i -g pnpm@10.17.1;
        else
          echo "pnpm already available";
        fi

    - name: Enable corepack
      run: corepack enable

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: pnpm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/